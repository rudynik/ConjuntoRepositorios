// <auto-generated />
using GitHub.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GitHub.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("WebApplication1.Models.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("RepositorioId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("login")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RepositorioId")
                        .IsUnique();

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("WebApplication1.Models.Repositorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Favorito")
                        .HasColumnType("INTEGER");

                    b.Property<string>("default_branch")
                        .HasColumnType("TEXT");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.Property<string>("full_name")
                        .HasColumnType("TEXT");

                    b.Property<string>("language")
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<string>("updated_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Repositorios");
                });

            modelBuilder.Entity("WebApplication1.Models.Owner", b =>
                {
                    b.HasOne("WebApplication1.Models.Repositorio", "Repositorio")
                        .WithOne("owner")
                        .HasForeignKey("WebApplication1.Models.Owner", "RepositorioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Repositorio");
                });

            modelBuilder.Entity("WebApplication1.Models.Repositorio", b =>
                {
                    b.Navigation("owner");
                });
#pragma warning restore 612, 618
        }
    }
}
